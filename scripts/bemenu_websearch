#!/usr/bin/env bash

# usage: (for google search)
# gg candy crush

bemenu_config=(-b -i -l 20
	--fn 'Iosevka Fixed'
	--fb '#282828'
	--ff '#ebdbb2'
	--nb '#282828'
	--nf '#ebdbb2'
	--tb '#282828'
	--hb '#282828'
	--tf '#fb4934'
	--hf '#fabd2f'
	--af '#ebdbb2'
	--ab '#282828'
	-B 2 --bdr '#85AE7F'
	--line-height 25
)

sources_file="$HOME/scripts/dmenu-websearch-sources"

prompt="-p Search:"

se_data="$(
    awk -F'"' '
    BEGIN {
        labels=""
    }
    {
        # Selector line
        gsub(/[[:space:]]/,"",$1)
        sel=$1

        # Description line
        dsc=$2

        # URL line
        gsub(/[[:space:]]/,"",$3)
        url=$3

        # URL array (selector is the key)
        surl[sel]=url

        # Descriptions array (selector is the key)
        sdsc[sel]=dsc

        if (labels != "") {
            labels=sprintf ("%s\n%s - %s", labels, sel, dsc)
        } else {
            labels=sprintf ("%s - %s", sel, dsc)
        }
    }
    END {
        for(k in surl) {
            print "declare -A " k
            print k "[url]=\"" surl[k] "\""
            print k "[dsc]=\"" sdsc[k] "\""
        }
        print "dmenu_labels=\"" labels "\""
    }
    ' "$sources_file"
)";

# Eval awk output as real variables...
eval "$se_data"

# Output label string to rofi...
search="$(bemenu $prompt "${bemenu_config[@]}" <<< $dmenu_labels)"

if [[ ! -z "$search" ]]; then

    # Retrieve data...
    sel="$( awk '{ print tolower($1) }' <<< $search )"
    txt="$( cut -d" " -f2- <<< $search )"

    eval "sen_dsc=\"\${$sel[dsc]}\""
    eval "sen_url=\"\${$sel[url]}\""

    xdg-open "$sen_url$txt" &>/dev/null &

fi

exit 0
